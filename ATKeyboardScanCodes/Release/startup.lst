

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Fri Jan 23 01:35:13 2009


     1                           
     2                           	; HI-TECH C PRO for the PIC10/12/16 MCU family
                                  V9.60PL5
     3                           	; Copyright (C) 1984-2009 HI-TECH Software
     4                           
     5                           	; Auto-generated runtime startup code for fina
                                 l link stage.
     6                           
     7                           	;
     8                           	; Compiler options:
     9                           	;
    10                           	; --chip=16F84A --ide=hitide --opt=none --summ
                                 ary=mem,file -G -M \
    11                           	; --asmlist --warn=0 --char=unsigned --double=
                                 24 --opt=+9 --opt=+asm \
    12                           	; --output=+intel --output=+mcof --runtime=+in
                                 it --runtime=+osccal \
    13                           	; --runtime=+clear --runtime=+clib --runtime=+
                                 keep -oh main.p1 isr.p1 \
    14                           	; init.p1
    15                           	;
    16                           
    17                           
    18                           	processor	16F84A
    19                           
    20                           	global	_main,start,_exit,reset_vec
    21                           	fnroot	_main
    22                           	psect	config,class=CONFIG,delta=2
    23                           	psect	idloc,class=IDLOC,delta=2
    24                           	psect	rbss_0,class=BANK0,space=1
    25                           	psect	rbss_1,class=BANK1,space=1
    26                           	psect	rbss_2,class=BANK2,space=1
    27                           	psect	rbss_3,class=BANK3,space=1
    28                           	psect	rdata_0,class=BANK0,space=1
    29                           	psect	rdata_1,class=BANK1,space=1
    30                           	psect	rdata_2,class=BANK2,space=1
    31                           	psect	rdata_3,class=BANK3,space=1
    32                           	psect	nvram,class=BANK0,space=1
    33                           	psect	nvram_1,class=BANK1,space=1
    34                           	psect	nvram_2,class=BANK2,space=1
    35                           	psect	nvram_3,class=BANK3,space=1
    36                           	psect	nvbit_0,class=BANK0,bit,space=1
    37                           	psect	nvbit_1,class=BANK1,bit,space=1
    38                           	psect	nvbit_2,class=BANK2,bit,space=1
    39                           	psect	nvbit_3,class=BANK3,bit,space=1
    40                           	psect	temp,ovrld,class=BANK0,space=1
    41                           	psect	struct,ovrld,class=BANK0,space=1
    42                           	psect	code,class=CODE,delta=2
    43                           	psect	rbit_0,class=BANK0,bit,space=1
    44                           	psect	ptbit_0,class=BANK0,bit,space=1
    45                           	psect	rbit_1,class=BANK1,bit,space=1
    46                           	psect	rbit_2,class=BANK2,bit,space=1
    47                           	psect	rbit_3,class=BANK3,bit,space=1
    48                           	psect	pstrings,class=CODE,delta=2
    49                           	psect	powerup,class=CODE,delta=2
    50                           	psect	reset_vec,class=CODE,delta=2
    51                           	psect	maintext,class=CODE,delta=2
    52  0000                     	C	set	0
    53  0000                     	Z	set	2
    54  0000                     	PCL	set	2
    55  0000                     	INDF	set	0
    56                           
    57                           	psect	fnauto0,class=BANK0,space=1
    58  0000                     	STATUS	equ	3
    59  0000                     	PCLATH	equ	0Ah
    60                           
    61                           	psect	eeprom_data,class=EEDATA,delta=2,space=2
    62                           	psect	idata,class=CODE,delta=2
    63                           	psect	idata_0,class=CODE,delta=2
    64                           	psect	idata_1,class=CODE,delta=2
    65                           	psect	idata_2,class=CODE,delta=2
    66                           	psect	idata_3,class=CODE,delta=2
    67                           	psect	intcode,class=CODE,delta=2
    68                           	psect	intret,class=CODE,delta=2
    69                           	psect	intentry,class=CODE,delta=2
    70                           	global	intlevel0,intlevel1,intlevel2, intlevel
                                 3, intlevel4, intlevel5
    71  0004                     intlevel0:
    72  0004                     intlevel1:
    73  0004                     intlevel2:
    74  0004                     intlevel3:
    75  0004                     intlevel4:
    76  0004                     intlevel5:
    77                           	psect	intsave,class=BANK0,space=1
    78                           	psect	intsave_1,class=BANK1,space=1
    79                           	psect	intsave_2,class=BANK2,space=1
    80                           	psect	intsave_3,class=BANK3,space=1
    81                           	psect	init,class=CODE,delta=2
    82                           	psect	init23,class=CODE,delta=2
    83                           	psect	text,class=CODE,delta=2
    84                           	psect	end_init,class=CODE,delta=2
    85                           	psect	clrtext,class=CODE,delta=2
    86                           	psect	float_text0,class=CODE,delta=2,size=2048
    87                           	psect	float_text1,class=CODE,delta=2,size=2048
    88                           	psect	float_text2,class=CODE,delta=2,size=2048
    89                           	psect	float_text3,class=CODE,delta=2,size=2048
    90                           	psect	float_text4,class=CODE,delta=2,size=2048
    91  0000                     	FSR	set	4
    92                           	psect	strings,class=CODE,delta=2,reloc=256
    93                           
    94                           	psect	reset_vec
    95  0000                     reset_vec:
    96                           	; No powerup routine
    97                           	global start
    98                           
    99                           ; jump to start
   100  0000  280F               	goto	start & 0x7FF | (reset_vec & not 0x7FF)
   101                           
   102                           
   103                           
   104                           	psect	init
   105  000F                     start
   106  000F                     _exit
   107                           
   108                           ;----------------------------------------------
                                 ---------------------------------
   109                           ;		Clear (zero) uninitialized global variables
   110                           
   111                           ;	5 bytes of RAM objects in bank 0 to zero
   112                           
   113                           	psect	init
   114                           	global	__Lrbss_0
   115  000F  3049               	movlw	low(__Lrbss_0)		;load the low address in
                                 to FSR
   116  0010  0084               	movwf	FSR
   117  0011  304E               	movlw	low(__Lrbss_0+5)		;load the high address
                                 +1 into W
   118  0012  2014               	fcall	clear_ram		;go and zero that range of ad
                                 dresses
   119                           
   120                           	psect	clrtext,class=CODE,delta=2
   121                           	global	clear_ram
   122                           ;	Called with FSR containing the base address, 
                                 and
   123                           ;	W with the last address+1
   124  0014                     clear_ram:
   125  0014  0064               	clrwdt			;clear the watchdog before getting in
                                 to this loop
   126  0015                     clrloop:
   127  0015  0180               	clrf	INDF		;clear RAM location pointed to by F
                                 SR
   128  0016  0A84               	incf	FSR,f		;increment pointer to next locatio
                                 n
   129  0017  0604               	xorwf	FSR,w		;XOR with final address
   130  0018  1903               	btfsc	STATUS,2	;have we reached the end yet?
   131  0019  3400               	retlw	0		;all done for this bank, return
   132  001A  0604               	xorwf	FSR,w		;XOR again to restore value
   133  001B  2815               	goto	clrloop		;go and do the next byte
   134                           
   135                           ;	No RAM objects to clear in bank 1
   136                           ;	No RAM objects to clear in bank 2
   137                           ;	No RAM objects to clear in bank 3
   138                           
   139                           ;----------------------------------------------
                                 ---------------------------------
   140                           	psect	end_init
   141  0013  281C               	ljmp _main


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Fri Jan 23 01:35:13 2009

  __Lrbss_0 0049          FSR 0004         INDF 0000        _main 001C  
      _exit 000F        start 000F    clear_ram 0014       STATUS 0003  
  intlevel0 0004    intlevel1 0004    intlevel2 0004    intlevel3 0004  
  intlevel4 0004    intlevel5 0004    reset_vec 0000      clrloop 0015  
